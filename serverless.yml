# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: 
  name: market-api-simex
  # awsKmsKeyArn: arn:aws:kms:us-east-1:XXXXXX:key/some-hash

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

plugins:
  - serverless-plugin-typescript
  - serverless-offline

custom:
  defaultStage: dev
  profiles:
    dev: market
    test: market
    prod: market

provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 1024
  timeout: 30
  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${self:custom.profiles.${self:provider.stage}}
  region: us-east-1
  # role: arn:aws:iam::YourAccountNumber:role/YourIamRole
  environment:
    OWNER_ADDRESS: '0x361ffaa1c30267ffb4c74c87fd50751b038d20b4'
    OWNER_PRIVATE_KEY: '0x442e5aac4e4694bec96aa29d5c103dd843e872d6cb4e6a9e0fd05c1d46eb215f'
    MARKET_CONTRACT_ADDRESS_1: '0xb97b05f8f65733bfffca1ab210d94197dbd3d1ef'
    MARKET_CONTRACT_ADDRESS_2: ''
    MARKET_CONTRACT_ADDRESS_3: ''
    MARKET_CONTRACT_ADDRESS_4: ''
    MARKET_CONTRACT_ADDRESS_5: ''
    COLLATERAL_POOL_CONTRACT_ADDRESS_1: '0xf8d557eeb0e4961a3de2ada3f18c80792dff4dae'
    COLLATERAL_POOL_CONTRACT_ADDRESS_2: ''
    COLLATERAL_POOL_CONTRACT_ADDRESS_3: ''
    COLLATERAL_POOL_CONTRACT_ADDRESS_4: ''
    COLLATERAL_POOL_CONTRACT_ADDRESS_5: ''


# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

package:
  exclude:
    - node_modules/**/*
  include:
    - node_modules/@0xproject/typescript-typings/**
    - node_modules/@marketprotocol/marketjs/**
    - node_modules/@marketprotocol/types/**
    - node_modules/axios/**
    - node_modules/bignumber.js/**
    - node_modules/crypto-js/**
    - node_modules/utf8/**
    - node_modules/web3/**
    - node_modules/xhr2/**
    - node_modules/xmlhttprequest/**

functions:
  whitelistGet:
    handler: src/whitelist.get
    # onError: arn:aws:sns:us-east-1:XXXXXX:test
    name: ${self:service.name}-${self:provider.stage}-whitelist-get
    description: Get all whilelisted contracts
    events:
      - http:
          path: whitelist
          method: get
  whitelistAdd:
    handler: src/whitelist.add
    name: ${self:service.name}-${self:provider.stage}-whitelist-add
    description: Add an addresses to the whitelist
    timeout: 300
    events:
      - http:
          path: whitelist
          method: post
  ordersGet:
    handler: src/orders.get
    name: ${self:service.name}-${self:provider.stage}-orders-get
    description: Get orders
    memorySize: 1024
    timeout: 300
    events:
      - http:
          path: orders
          method: get
  proxyGet:
    handler: src/proxy.proxyAll
    name: ${self:service.name}-${self:provider.stage}-proxy-proxyAll
    description: Proxy function for oracles
    memorySize: 1024
    timeout: 300
    events:
      - http:
          path: proxy/{entity}/{action}
          method: get
  collateralPoolGet:
    handler: src/collateralpool.get
    name: ${self:service.name}-${self:provider.stage}-collateralpool-get
    description: Get the collateral pool contract address
    memorySize: 1024
    timeout: 300
    events:
      - http:
          path: collateralpool/{address}
          method: get

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
